name: zfsutils
adopt-info: zfsutils
summary: ZFS Userspace Utilities for Ubuntu Core
description: |
  Userspace utilities for ZFS filesystem management on Ubuntu Core systems.
  Includes commands for importing, mounting, and managing ZFS pools and filesystems.
  Built from the Ubuntu zfsutils package in Ubuntu 24.04.
  .
  This package provides the standard tools, which work well, except for when
  mounting filesystems. When mounting filesystems they will get mounted in the
  zfsutils namespace if you use the confined version of the tools. Luckily you
  can use them in an "unconfined" manner. If you add `/snap/zfsutils/current` to
  the path of your root user. You can then call the tools unconfined.

base: core24
confinement: strict
grade: stable

parts:
  zfsutils:
    plugin: nil
    stage-packages:
      - zfsutils-linux
      - libzfs4linux
      - libnvpair3linux
      - libuutil3linux
      - bash-completion
    override-build: |
      snapcraftctl build
      # Extract version from the control file of the staged package
      if [ -f $SNAPCRAFT_PART_INSTALL/usr/share/doc/zfsutils-linux/changelog.Debian.gz ]; then
        ZFS_VERSION=$(zcat $SNAPCRAFT_PART_INSTALL/usr/share/doc/zfsutils-linux/changelog.Debian.gz | head -1 | sed 's/.*(\(.*\)).*/\1/')
        snapcraftctl set-version "$ZFS_VERSION"
      elif [ -d $SNAPCRAFT_STAGE/usr/share/doc/zfsutils-linux ]; then
        ZFS_VERSION=$(cat $SNAPCRAFT_STAGE/usr/share/doc/zfsutils-linux/copyright | grep -i "version" | head -1 | sed 's/.*[vV]ersion \(.*\)/\1/' | tr -d ' ')
        if [ -n "$ZFS_VERSION" ]; then
          snapcraftctl set-version "$ZFS_VERSION"
        else
          # Fallback if version can't be found
          snapcraftctl set-version "0.$(date +%Y%m%d)"
        fi
      else
        # Fallback if we can't find the version
        snapcraftctl set-version "0.$(date +%Y%m%d)"
      fi
      # Make directories for ZFS cache and configuration
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/zfs
      mkdir -p $SNAPCRAFT_PART_INSTALL/var/lib/zfs
  helpers:
    plugin: dump
    source: snap/local/scripts


plugs:
  system-files:
    interface: system-files
    read:
      - /dev
      - /proc
      - /sys
      - /run
      - /etc/zfs
      - /etc/hostid
    write:
      - /dev/zfs
      - /etc/zfs
      - /var/lib/zfs
      - /run/lock
  block-devices:
    interface: block-devices
    allow-sandbox: false

apps:
  zpool:
    command: zpool
    aliases: [zpool]
    plugs:
      - hardware-observe
      - mount-observe
      - system-files
      - block-devices
      - kernel-module-control
      - hardware-random-observe
      - log-observe
      - home
      - system-observe
  
  zfs:
    command: zfs
    completer: usr/share/bash-completion/completions/zfs
    aliases: [zfs]
    plugs:
      - hardware-observe
      - mount-observe
      - system-files
      - block-devices
      - kernel-module-control
      - hardware-random-observe
      - log-observe
      - home
      - system-observe
      
  mount-zfs:
    command: mount.zfs
    aliases: [mount.zfs]
    plugs:
      - hardware-observe
      - mount-observe
      - system-files
      - block-devices
      - kernel-module-control
      - hardware-random-observe
      - log-observe
      - home
      - system-observe